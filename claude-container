#!/bin/bash

# スクリプトのあるディレクトリを取得
SCRIPT_DIR="/opt/ai-agents/claude-code-container"

# デフォルト値
DANGEROUS_MODE=""

# オプション解析
while [[ $# -gt 0 ]]; do
    case $1 in
        -x)
            DANGEROUS_MODE="--dangerously-skip-permissions"
            shift
            ;;
        *)
            break
            ;;
    esac
done

# 引数チェック
if [ $# -eq 0 ]; then
    echo "使用方法: claude-container [-x] <workspace-path> [claude-options...]"
    echo "例: claude-container ."
    echo "例: claude-container -x /path/to/project"
    echo "例: claude-container /path/to/project --model claude-3-opus-20240229"
    echo "例: claude-container -x /path/to/project --verbose --model claude-3-opus-20240229"
    echo ""
    echo "オプション:"
    echo "  -x                  --dangerously-skip-permissionsオプションを付与"
    echo "  claude-options...   ワークスペースパスの後の引数はすべてclaudeに渡されます"
    exit 1
fi

# ワークスペースパスを絶対パスに変換
WORKSPACE_PATH=$(realpath "$1")
shift

# 残りの引数をclaudeに渡す
CLAUDE_ARGS="$@"

if [ ! -d "$WORKSPACE_PATH" ]; then
    echo "エラー: ディレクトリが存在しません: $WORKSPACE_PATH"
    exit 1
fi

# Dockerイメージ名
IMAGE_NAME="claude-code"

# コンテナ名（ワークスペースパスから生成）
CONTAINER_NAME="claude-code-$(echo "$WORKSPACE_PATH" | sed 's/[^a-zA-Z0-9]/-/g' | tail -c 50)"

echo "ワークスペース: $WORKSPACE_PATH"
echo "コンテナ名: $CONTAINER_NAME"

# Dockerコンテナを実行
container run -it --rm \
    --name "$CONTAINER_NAME" \
    -v "$SCRIPT_DIR/.claude:/home/node/.claude" \
    -v "$WORKSPACE_PATH:/workspace" \
    -e HOME=/home/node \
    -e TZ="${TZ:-Asia/Tokyo}" \
    --workdir /workspace \
    "$IMAGE_NAME" claude $DANGEROUS_MODE $CLAUDE_ARGS
